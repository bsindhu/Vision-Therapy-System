#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EYEServiceWebRole
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EYE")]
	public partial class EYEDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertHealthCareProvider(HealthCareProvider instance);
    partial void UpdateHealthCareProvider(HealthCareProvider instance);
    partial void DeleteHealthCareProvider(HealthCareProvider instance);
    partial void InsertEthnicity(Ethnicity instance);
    partial void UpdateEthnicity(Ethnicity instance);
    partial void DeleteEthnicity(Ethnicity instance);
    partial void InsertSchool(School instance);
    partial void UpdateSchool(School instance);
    partial void DeleteSchool(School instance);
    partial void InsertFamily(Family instance);
    partial void UpdateFamily(Family instance);
    partial void DeleteFamily(Family instance);
    partial void InsertFamily_Patient(Family_Patient instance);
    partial void UpdateFamily_Patient(Family_Patient instance);
    partial void DeleteFamily_Patient(Family_Patient instance);
    partial void InsertPatient(Patient instance);
    partial void UpdatePatient(Patient instance);
    partial void DeletePatient(Patient instance);
    partial void InsertAppointment(Appointment instance);
    partial void UpdateAppointment(Appointment instance);
    partial void DeleteAppointment(Appointment instance);
    partial void InsertQualification(Qualification instance);
    partial void UpdateQualification(Qualification instance);
    partial void DeleteQualification(Qualification instance);
    partial void InsertQualification_Provider(Qualification_Provider instance);
    partial void UpdateQualification_Provider(Qualification_Provider instance);
    partial void DeleteQualification_Provider(Qualification_Provider instance);
    #endregion
		
		public EYEDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EYEConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EYEDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EYEDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EYEDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EYEDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<HealthCareProvider> HealthCareProviders
		{
			get
			{
				return this.GetTable<HealthCareProvider>();
			}
		}
		
		public System.Data.Linq.Table<Ethnicity> Ethnicities
		{
			get
			{
				return this.GetTable<Ethnicity>();
			}
		}
		
		public System.Data.Linq.Table<School> Schools
		{
			get
			{
				return this.GetTable<School>();
			}
		}
		
		public System.Data.Linq.Table<Family> Families
		{
			get
			{
				return this.GetTable<Family>();
			}
		}
		
		public System.Data.Linq.Table<Family_Patient> Family_Patients
		{
			get
			{
				return this.GetTable<Family_Patient>();
			}
		}
		
		public System.Data.Linq.Table<Patient> Patients
		{
			get
			{
				return this.GetTable<Patient>();
			}
		}
		
		public System.Data.Linq.Table<ParentDetail> ParentDetails
		{
			get
			{
				return this.GetTable<ParentDetail>();
			}
		}
		
		public System.Data.Linq.Table<HealthCareProviderList> HealthCareProviderLists
		{
			get
			{
				return this.GetTable<HealthCareProviderList>();
			}
		}
		
		public System.Data.Linq.Table<Appointment> Appointments
		{
			get
			{
				return this.GetTable<Appointment>();
			}
		}
		
		public System.Data.Linq.Table<AppointmentListPatient> AppointmentListPatients
		{
			get
			{
				return this.GetTable<AppointmentListPatient>();
			}
		}
		
		public System.Data.Linq.Table<Qualification> Qualifications
		{
			get
			{
				return this.GetTable<Qualification>();
			}
		}
		
		public System.Data.Linq.Table<Qualification_Provider> Qualification_Providers
		{
			get
			{
				return this.GetTable<Qualification_Provider>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StateCode")]
		public ISingleResult<StateCodeResult> StateCode([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] ref string statecode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statecode);
			statecode = ((string)(result.GetParameterValue(0)));
			return ((ISingleResult<StateCodeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Ethnicity")]
		public ISingleResult<sp_EthnicityResult> sp_Ethnicity([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ethnicity", DbType="NVarChar(50)")] ref string ethnicity)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ethnicity);
			ethnicity = ((string)(result.GetParameterValue(0)));
			return ((ISingleResult<sp_EthnicityResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_s1")]
		public ISingleResult<sp_s1Result> sp_s1([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string statecode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> stateid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statecode, stateid);
			stateid = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((ISingleResult<sp_s1Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_s2")]
		public ISingleResult<sp_s2Result> sp_s2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string statecode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> stateid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statecode, stateid);
			stateid = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((ISingleResult<sp_s2Result>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddressId;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private int _State_fk;
		
		private int _ZipCode;
		
		private string _City;
		
		private EntitySet<User> _Users;
		
		private EntitySet<School> _Schools;
		
		private EntityRef<State> _State;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIdChanging(int value);
    partial void OnAddressIdChanged();
    partial void OnAddressLine1Changing(string value);
    partial void OnAddressLine1Changed();
    partial void OnAddressLine2Changing(string value);
    partial void OnAddressLine2Changed();
    partial void OnState_fkChanging(int value);
    partial void OnState_fkChanged();
    partial void OnZipCodeChanging(int value);
    partial void OnZipCodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    #endregion
		
		public Address()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AddressId
		{
			get
			{
				return this._AddressId;
			}
			set
			{
				if ((this._AddressId != value))
				{
					this.OnAddressIdChanging(value);
					this.SendPropertyChanging();
					this._AddressId = value;
					this.SendPropertyChanged("AddressId");
					this.OnAddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine1", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this.OnAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._AddressLine1 = value;
					this.SendPropertyChanged("AddressLine1");
					this.OnAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine2", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this.OnAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._AddressLine2 = value;
					this.SendPropertyChanged("AddressLine2");
					this.OnAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_fk", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int State_fk
		{
			get
			{
				return this._State_fk;
			}
			set
			{
				if ((this._State_fk != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnState_fkChanging(value);
					this.SendPropertyChanging();
					this._State_fk = value;
					this.SendPropertyChanged("State_fk");
					this.OnState_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_User", Storage="_Users", ThisKey="AddressId", OtherKey="AddressId_fk")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<User> Users
		{
			get
			{
				if ((this.serializing 
							&& (this._Users.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_School", Storage="_Schools", ThisKey="AddressId", OtherKey="AddressId_fk")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<School> Schools
		{
			get
			{
				if ((this.serializing 
							&& (this._Schools.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Schools;
			}
			set
			{
				this._Schools.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Address", Storage="_State", ThisKey="State_fk", OtherKey="StateId", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._State_fk = value.StateId;
					}
					else
					{
						this._State_fk = default(int);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_Schools(School entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_Schools(School entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void Initialize()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Schools = new EntitySet<School>(new Action<School>(this.attach_Schools), new Action<School>(this.detach_Schools));
			this._State = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateId;
		
		private string _StateCode;
		
		private string _StateName;
		
		private EntitySet<Address> _Addresses;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIdChanging(int value);
    partial void OnStateIdChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    #endregion
		
		public State()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Address", Storage="_Addresses", ThisKey="StateId", OtherKey="State_fk")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<Address> Addresses
		{
			get
			{
				if ((this.serializing 
							&& (this._Addresses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
		
		private void Initialize()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _Role;
		
		private string _Password;
		
		private string _Email;
		
		private string _Phone;
		
		private System.Nullable<int> _AddressId_fk;
		
		private EntitySet<HealthCareProvider> _HealthCareProviders;
		
		private EntitySet<Family> _Families;
		
		private EntityRef<Address> _Address;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressId_fkChanging(System.Nullable<int> value);
    partial void OnAddressId_fkChanged();
    #endregion
		
		public User()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressId_fk", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> AddressId_fk
		{
			get
			{
				return this._AddressId_fk;
			}
			set
			{
				if ((this._AddressId_fk != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressId_fkChanging(value);
					this.SendPropertyChanging();
					this._AddressId_fk = value;
					this.SendPropertyChanged("AddressId_fk");
					this.OnAddressId_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_HealthCareProvider", Storage="_HealthCareProviders", ThisKey="UserId", OtherKey="UserId_fk")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<HealthCareProvider> HealthCareProviders
		{
			get
			{
				if ((this.serializing 
							&& (this._HealthCareProviders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._HealthCareProviders;
			}
			set
			{
				this._HealthCareProviders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Family", Storage="_Families", ThisKey="UserId", OtherKey="UserId_fk")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Family> Families
		{
			get
			{
				if ((this.serializing 
							&& (this._Families.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Families;
			}
			set
			{
				this._Families.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_User", Storage="_Address", ThisKey="AddressId_fk", OtherKey="AddressId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._AddressId_fk = value.AddressId;
					}
					else
					{
						this._AddressId_fk = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HealthCareProviders(HealthCareProvider entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_HealthCareProviders(HealthCareProvider entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Families(Family entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Families(Family entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void Initialize()
		{
			this._HealthCareProviders = new EntitySet<HealthCareProvider>(new Action<HealthCareProvider>(this.attach_HealthCareProviders), new Action<HealthCareProvider>(this.detach_HealthCareProviders));
			this._Families = new EntitySet<Family>(new Action<Family>(this.attach_Families), new Action<Family>(this.detach_Families));
			this._Address = default(EntityRef<Address>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HealthCareProvider")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class HealthCareProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HealthCareProviderId;
		
		private string _PracticeName;
		
		private string _RoleInPractice;
		
		private string _Gender;
		
		private string _ClinicName;
		
		private System.Nullable<int> _UserId_fk;
		
		private EntitySet<Appointment> _Appointments;
		
		private EntitySet<Qualification_Provider> _Qualification_Providers;
		
		private EntityRef<User> _User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHealthCareProviderIdChanging(int value);
    partial void OnHealthCareProviderIdChanged();
    partial void OnPracticeNameChanging(string value);
    partial void OnPracticeNameChanged();
    partial void OnRoleInPracticeChanging(string value);
    partial void OnRoleInPracticeChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnClinicNameChanging(string value);
    partial void OnClinicNameChanged();
    partial void OnUserId_fkChanging(System.Nullable<int> value);
    partial void OnUserId_fkChanged();
    #endregion
		
		public HealthCareProvider()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthCareProviderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int HealthCareProviderId
		{
			get
			{
				return this._HealthCareProviderId;
			}
			set
			{
				if ((this._HealthCareProviderId != value))
				{
					this.OnHealthCareProviderIdChanging(value);
					this.SendPropertyChanging();
					this._HealthCareProviderId = value;
					this.SendPropertyChanged("HealthCareProviderId");
					this.OnHealthCareProviderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracticeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string PracticeName
		{
			get
			{
				return this._PracticeName;
			}
			set
			{
				if ((this._PracticeName != value))
				{
					this.OnPracticeNameChanging(value);
					this.SendPropertyChanging();
					this._PracticeName = value;
					this.SendPropertyChanged("PracticeName");
					this.OnPracticeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleInPractice", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string RoleInPractice
		{
			get
			{
				return this._RoleInPractice;
			}
			set
			{
				if ((this._RoleInPractice != value))
				{
					this.OnRoleInPracticeChanging(value);
					this.SendPropertyChanging();
					this._RoleInPractice = value;
					this.SendPropertyChanged("RoleInPractice");
					this.OnRoleInPracticeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(30)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicName", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ClinicName
		{
			get
			{
				return this._ClinicName;
			}
			set
			{
				if ((this._ClinicName != value))
				{
					this.OnClinicNameChanging(value);
					this.SendPropertyChanging();
					this._ClinicName = value;
					this.SendPropertyChanged("ClinicName");
					this.OnClinicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId_fk", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> UserId_fk
		{
			get
			{
				return this._UserId_fk;
			}
			set
			{
				if ((this._UserId_fk != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserId_fkChanging(value);
					this.SendPropertyChanging();
					this._UserId_fk = value;
					this.SendPropertyChanged("UserId_fk");
					this.OnUserId_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HealthCareProvider_Appointment", Storage="_Appointments", ThisKey="HealthCareProviderId", OtherKey="ProviderId_fk")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<Appointment> Appointments
		{
			get
			{
				if ((this.serializing 
							&& (this._Appointments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Appointments;
			}
			set
			{
				this._Appointments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HealthCareProvider_Qualification_Provider", Storage="_Qualification_Providers", ThisKey="HealthCareProviderId", OtherKey="HealthCareProviderId_fk")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<Qualification_Provider> Qualification_Providers
		{
			get
			{
				if ((this.serializing 
							&& (this._Qualification_Providers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Qualification_Providers;
			}
			set
			{
				this._Qualification_Providers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_HealthCareProvider", Storage="_User", ThisKey="UserId_fk", OtherKey="UserId", IsForeignKey=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.HealthCareProviders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.HealthCareProviders.Add(this);
						this._UserId_fk = value.UserId;
					}
					else
					{
						this._UserId_fk = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.HealthCareProvider = this;
		}
		
		private void detach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.HealthCareProvider = null;
		}
		
		private void attach_Qualification_Providers(Qualification_Provider entity)
		{
			this.SendPropertyChanging();
			entity.HealthCareProvider = this;
		}
		
		private void detach_Qualification_Providers(Qualification_Provider entity)
		{
			this.SendPropertyChanging();
			entity.HealthCareProvider = null;
		}
		
		private void Initialize()
		{
			this._Appointments = new EntitySet<Appointment>(new Action<Appointment>(this.attach_Appointments), new Action<Appointment>(this.detach_Appointments));
			this._Qualification_Providers = new EntitySet<Qualification_Provider>(new Action<Qualification_Provider>(this.attach_Qualification_Providers), new Action<Qualification_Provider>(this.detach_Qualification_Providers));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ethnicity")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Ethnicity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EthnicityId;
		
		private string _EthnicityName;
		
		private EntitySet<Patient> _Patients;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEthnicityIdChanging(int value);
    partial void OnEthnicityIdChanged();
    partial void OnEthnicityNameChanging(string value);
    partial void OnEthnicityNameChanged();
    #endregion
		
		public Ethnicity()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EthnicityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EthnicityId
		{
			get
			{
				return this._EthnicityId;
			}
			set
			{
				if ((this._EthnicityId != value))
				{
					this.OnEthnicityIdChanging(value);
					this.SendPropertyChanging();
					this._EthnicityId = value;
					this.SendPropertyChanged("EthnicityId");
					this.OnEthnicityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EthnicityName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string EthnicityName
		{
			get
			{
				return this._EthnicityName;
			}
			set
			{
				if ((this._EthnicityName != value))
				{
					this.OnEthnicityNameChanging(value);
					this.SendPropertyChanging();
					this._EthnicityName = value;
					this.SendPropertyChanged("EthnicityName");
					this.OnEthnicityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ethnicity_Patient", Storage="_Patients", ThisKey="EthnicityId", OtherKey="EthnicityId_fk")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<Patient> Patients
		{
			get
			{
				if ((this.serializing 
							&& (this._Patients.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Patients;
			}
			set
			{
				this._Patients.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Patients(Patient entity)
		{
			this.SendPropertyChanging();
			entity.Ethnicity = this;
		}
		
		private void detach_Patients(Patient entity)
		{
			this.SendPropertyChanging();
			entity.Ethnicity = null;
		}
		
		private void Initialize()
		{
			this._Patients = new EntitySet<Patient>(new Action<Patient>(this.attach_Patients), new Action<Patient>(this.detach_Patients));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.School")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class School : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SchoolId;
		
		private string _SchoolName;
		
		private string _Contact;
		
		private System.Nullable<int> _AddressId_fk;
		
		private EntitySet<Patient> _Patients;
		
		private EntityRef<Address> _Address;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSchoolIdChanging(int value);
    partial void OnSchoolIdChanged();
    partial void OnSchoolNameChanging(string value);
    partial void OnSchoolNameChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnAddressId_fkChanging(System.Nullable<int> value);
    partial void OnAddressId_fkChanged();
    #endregion
		
		public School()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this.OnSchoolNameChanging(value);
					this.SendPropertyChanging();
					this._SchoolName = value;
					this.SendPropertyChanged("SchoolName");
					this.OnSchoolNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressId_fk", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> AddressId_fk
		{
			get
			{
				return this._AddressId_fk;
			}
			set
			{
				if ((this._AddressId_fk != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressId_fkChanging(value);
					this.SendPropertyChanging();
					this._AddressId_fk = value;
					this.SendPropertyChanged("AddressId_fk");
					this.OnAddressId_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Patient", Storage="_Patients", ThisKey="SchoolId", OtherKey="SchoolId_fk")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<Patient> Patients
		{
			get
			{
				if ((this.serializing 
							&& (this._Patients.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Patients;
			}
			set
			{
				this._Patients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_School", Storage="_Address", ThisKey="AddressId_fk", OtherKey="AddressId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.Schools.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.Schools.Add(this);
						this._AddressId_fk = value.AddressId;
					}
					else
					{
						this._AddressId_fk = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Patients(Patient entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_Patients(Patient entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
		
		private void Initialize()
		{
			this._Patients = new EntitySet<Patient>(new Action<Patient>(this.attach_Patients), new Action<Patient>(this.detach_Patients));
			this._Address = default(EntityRef<Address>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Family")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Family : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FamilyId;
		
		private string _OtherContact;
		
		private System.Nullable<int> _UserId_fk;
		
		private EntitySet<Family_Patient> _Family_Patients;
		
		private EntitySet<Appointment> _Appointments;
		
		private EntityRef<User> _User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFamilyIdChanging(int value);
    partial void OnFamilyIdChanged();
    partial void OnOtherContactChanging(string value);
    partial void OnOtherContactChanged();
    partial void OnUserId_fkChanging(System.Nullable<int> value);
    partial void OnUserId_fkChanged();
    #endregion
		
		public Family()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int FamilyId
		{
			get
			{
				return this._FamilyId;
			}
			set
			{
				if ((this._FamilyId != value))
				{
					this.OnFamilyIdChanging(value);
					this.SendPropertyChanging();
					this._FamilyId = value;
					this.SendPropertyChanged("FamilyId");
					this.OnFamilyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherContact", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string OtherContact
		{
			get
			{
				return this._OtherContact;
			}
			set
			{
				if ((this._OtherContact != value))
				{
					this.OnOtherContactChanging(value);
					this.SendPropertyChanging();
					this._OtherContact = value;
					this.SendPropertyChanged("OtherContact");
					this.OnOtherContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId_fk", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> UserId_fk
		{
			get
			{
				return this._UserId_fk;
			}
			set
			{
				if ((this._UserId_fk != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserId_fkChanging(value);
					this.SendPropertyChanging();
					this._UserId_fk = value;
					this.SendPropertyChanged("UserId_fk");
					this.OnUserId_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Family_Family_Patient", Storage="_Family_Patients", ThisKey="FamilyId", OtherKey="FamilyId_fk")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<Family_Patient> Family_Patients
		{
			get
			{
				if ((this.serializing 
							&& (this._Family_Patients.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Family_Patients;
			}
			set
			{
				this._Family_Patients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Family_Appointment", Storage="_Appointments", ThisKey="FamilyId", OtherKey="FamilyId_fk")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<Appointment> Appointments
		{
			get
			{
				if ((this.serializing 
							&& (this._Appointments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Appointments;
			}
			set
			{
				this._Appointments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Family", Storage="_User", ThisKey="UserId_fk", OtherKey="UserId", IsForeignKey=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Families.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Families.Add(this);
						this._UserId_fk = value.UserId;
					}
					else
					{
						this._UserId_fk = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Family_Patients(Family_Patient entity)
		{
			this.SendPropertyChanging();
			entity.Family = this;
		}
		
		private void detach_Family_Patients(Family_Patient entity)
		{
			this.SendPropertyChanging();
			entity.Family = null;
		}
		
		private void attach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Family = this;
		}
		
		private void detach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Family = null;
		}
		
		private void Initialize()
		{
			this._Family_Patients = new EntitySet<Family_Patient>(new Action<Family_Patient>(this.attach_Family_Patients), new Action<Family_Patient>(this.detach_Family_Patients));
			this._Appointments = new EntitySet<Appointment>(new Action<Appointment>(this.attach_Appointments), new Action<Appointment>(this.detach_Appointments));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Family_Patient")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Family_Patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FamilyId_fk;
		
		private int _PatientId_fk;
		
		private int _FamilyPatientId;
		
		private EntityRef<Family> _Family;
		
		private EntityRef<Patient> _Patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFamilyId_fkChanging(int value);
    partial void OnFamilyId_fkChanged();
    partial void OnPatientId_fkChanging(int value);
    partial void OnPatientId_fkChanged();
    partial void OnFamilyPatientIdChanging(int value);
    partial void OnFamilyPatientIdChanged();
    #endregion
		
		public Family_Patient()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyId_fk", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int FamilyId_fk
		{
			get
			{
				return this._FamilyId_fk;
			}
			set
			{
				if ((this._FamilyId_fk != value))
				{
					if (this._Family.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyId_fkChanging(value);
					this.SendPropertyChanging();
					this._FamilyId_fk = value;
					this.SendPropertyChanged("FamilyId_fk");
					this.OnFamilyId_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientId_fk", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PatientId_fk
		{
			get
			{
				return this._PatientId_fk;
			}
			set
			{
				if ((this._PatientId_fk != value))
				{
					if (this._Patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientId_fkChanging(value);
					this.SendPropertyChanging();
					this._PatientId_fk = value;
					this.SendPropertyChanged("PatientId_fk");
					this.OnPatientId_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyPatientId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int FamilyPatientId
		{
			get
			{
				return this._FamilyPatientId;
			}
			set
			{
				if ((this._FamilyPatientId != value))
				{
					this.OnFamilyPatientIdChanging(value);
					this.SendPropertyChanging();
					this._FamilyPatientId = value;
					this.SendPropertyChanged("FamilyPatientId");
					this.OnFamilyPatientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Family_Family_Patient", Storage="_Family", ThisKey="FamilyId_fk", OtherKey="FamilyId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Family Family
		{
			get
			{
				return this._Family.Entity;
			}
			set
			{
				Family previousValue = this._Family.Entity;
				if (((previousValue != value) 
							|| (this._Family.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Family.Entity = null;
						previousValue.Family_Patients.Remove(this);
					}
					this._Family.Entity = value;
					if ((value != null))
					{
						value.Family_Patients.Add(this);
						this._FamilyId_fk = value.FamilyId;
					}
					else
					{
						this._FamilyId_fk = default(int);
					}
					this.SendPropertyChanged("Family");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Family_Patient", Storage="_Patient", ThisKey="PatientId_fk", OtherKey="PatientId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Patient Patient
		{
			get
			{
				return this._Patient.Entity;
			}
			set
			{
				Patient previousValue = this._Patient.Entity;
				if (((previousValue != value) 
							|| (this._Patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patient.Entity = null;
						previousValue.Family_Patients.Remove(this);
					}
					this._Patient.Entity = value;
					if ((value != null))
					{
						value.Family_Patients.Add(this);
						this._PatientId_fk = value.PatientId;
					}
					else
					{
						this._PatientId_fk = default(int);
					}
					this.SendPropertyChanged("Patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Family = default(EntityRef<Family>);
			this._Patient = default(EntityRef<Patient>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patient")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PatientId;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _Gender;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private System.Nullable<int> _EthnicityId_fk;
		
		private System.Nullable<int> _SchoolId_fk;
		
		private EntitySet<Family_Patient> _Family_Patients;
		
		private EntitySet<Appointment> _Appointments;
		
		private EntityRef<Ethnicity> _Ethnicity;
		
		private EntityRef<School> _School;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIdChanging(int value);
    partial void OnPatientIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnEthnicityId_fkChanging(System.Nullable<int> value);
    partial void OnEthnicityId_fkChanged();
    partial void OnSchoolId_fkChanging(System.Nullable<int> value);
    partial void OnSchoolId_fkChanged();
    #endregion
		
		public Patient()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PatientId
		{
			get
			{
				return this._PatientId;
			}
			set
			{
				if ((this._PatientId != value))
				{
					this.OnPatientIdChanging(value);
					this.SendPropertyChanging();
					this._PatientId = value;
					this.SendPropertyChanged("PatientId");
					this.OnPatientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EthnicityId_fk", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> EthnicityId_fk
		{
			get
			{
				return this._EthnicityId_fk;
			}
			set
			{
				if ((this._EthnicityId_fk != value))
				{
					if (this._Ethnicity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEthnicityId_fkChanging(value);
					this.SendPropertyChanging();
					this._EthnicityId_fk = value;
					this.SendPropertyChanged("EthnicityId_fk");
					this.OnEthnicityId_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId_fk", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> SchoolId_fk
		{
			get
			{
				return this._SchoolId_fk;
			}
			set
			{
				if ((this._SchoolId_fk != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolId_fkChanging(value);
					this.SendPropertyChanging();
					this._SchoolId_fk = value;
					this.SendPropertyChanged("SchoolId_fk");
					this.OnSchoolId_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Family_Patient", Storage="_Family_Patients", ThisKey="PatientId", OtherKey="PatientId_fk")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Family_Patient> Family_Patients
		{
			get
			{
				if ((this.serializing 
							&& (this._Family_Patients.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Family_Patients;
			}
			set
			{
				this._Family_Patients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Appointment", Storage="_Appointments", ThisKey="PatientId", OtherKey="PatientId_fk")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<Appointment> Appointments
		{
			get
			{
				if ((this.serializing 
							&& (this._Appointments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Appointments;
			}
			set
			{
				this._Appointments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ethnicity_Patient", Storage="_Ethnicity", ThisKey="EthnicityId_fk", OtherKey="EthnicityId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Ethnicity Ethnicity
		{
			get
			{
				return this._Ethnicity.Entity;
			}
			set
			{
				Ethnicity previousValue = this._Ethnicity.Entity;
				if (((previousValue != value) 
							|| (this._Ethnicity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ethnicity.Entity = null;
						previousValue.Patients.Remove(this);
					}
					this._Ethnicity.Entity = value;
					if ((value != null))
					{
						value.Patients.Add(this);
						this._EthnicityId_fk = value.EthnicityId;
					}
					else
					{
						this._EthnicityId_fk = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ethnicity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Patient", Storage="_School", ThisKey="SchoolId_fk", OtherKey="SchoolId", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.Patients.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.Patients.Add(this);
						this._SchoolId_fk = value.SchoolId;
					}
					else
					{
						this._SchoolId_fk = default(Nullable<int>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Family_Patients(Family_Patient entity)
		{
			this.SendPropertyChanging();
			entity.Patient = this;
		}
		
		private void detach_Family_Patients(Family_Patient entity)
		{
			this.SendPropertyChanging();
			entity.Patient = null;
		}
		
		private void attach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Patient = this;
		}
		
		private void detach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Patient = null;
		}
		
		private void Initialize()
		{
			this._Family_Patients = new EntitySet<Family_Patient>(new Action<Family_Patient>(this.attach_Family_Patients), new Action<Family_Patient>(this.detach_Family_Patients));
			this._Appointments = new EntitySet<Appointment>(new Action<Appointment>(this.attach_Appointments), new Action<Appointment>(this.detach_Appointments));
			this._Ethnicity = default(EntityRef<Ethnicity>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParentDetails")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ParentDetail
	{
		
		private int _FamilyId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Phone;
		
		private string _OtherContact;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _City;
		
		public ParentDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int FamilyId
		{
			get
			{
				return this._FamilyId;
			}
			set
			{
				if ((this._FamilyId != value))
				{
					this._FamilyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherContact", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string OtherContact
		{
			get
			{
				return this._OtherContact;
			}
			set
			{
				if ((this._OtherContact != value))
				{
					this._OtherContact = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine1", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this._AddressLine1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine2", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this._AddressLine2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HealthCareProviderList")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class HealthCareProviderList
	{
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private string _Clinic_Name;
		
		private string _Role_InPractice;
		
		private string _Phone_;
		
		private string _Address_Line;
		
		private string _City_;
		
		public HealthCareProviderList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this._First_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this._Last_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clinic_Name", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Clinic_Name
		{
			get
			{
				return this._Clinic_Name;
			}
			set
			{
				if ((this._Clinic_Name != value))
				{
					this._Clinic_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_InPractice", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Role_InPractice
		{
			get
			{
				return this._Role_InPractice;
			}
			set
			{
				if ((this._Role_InPractice != value))
				{
					this._Role_InPractice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Phone_
		{
			get
			{
				return this._Phone_;
			}
			set
			{
				if ((this._Phone_ != value))
				{
					this._Phone_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address_Line", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Address_Line
		{
			get
			{
				return this._Address_Line;
			}
			set
			{
				if ((this._Address_Line != value))
				{
					this._Address_Line = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string City_
		{
			get
			{
				return this._City_;
			}
			set
			{
				if ((this._City_ != value))
				{
					this._City_ = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Appointment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Appointment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppointmentId;
		
		private System.Nullable<System.TimeSpan> _Time;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Reason;
		
		private System.Nullable<bool> _IsNewRequestFromParent;
		
		private System.Nullable<bool> _IsNewRequestFromProvider;
		
		private string _Comment;
		
		private string _Duration;
		
		private System.Nullable<int> _PatientId_fk;
		
		private System.Nullable<int> _ProviderId_fk;
		
		private System.Nullable<int> _FamilyId_fk;
		
		private EntityRef<Patient> _Patient;
		
		private EntityRef<HealthCareProvider> _HealthCareProvider;
		
		private EntityRef<Family> _Family;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppointmentIdChanging(int value);
    partial void OnAppointmentIdChanged();
    partial void OnTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnIsNewRequestFromParentChanging(System.Nullable<bool> value);
    partial void OnIsNewRequestFromParentChanged();
    partial void OnIsNewRequestFromProviderChanging(System.Nullable<bool> value);
    partial void OnIsNewRequestFromProviderChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void OnPatientId_fkChanging(System.Nullable<int> value);
    partial void OnPatientId_fkChanged();
    partial void OnProviderId_fkChanging(System.Nullable<int> value);
    partial void OnProviderId_fkChanged();
    partial void OnFamilyId_fkChanging(System.Nullable<int> value);
    partial void OnFamilyId_fkChanged();
    #endregion
		
		public Appointment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppointmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AppointmentId
		{
			get
			{
				return this._AppointmentId;
			}
			set
			{
				if ((this._AppointmentId != value))
				{
					this.OnAppointmentIdChanging(value);
					this.SendPropertyChanging();
					this._AppointmentId = value;
					this.SendPropertyChanged("AppointmentId");
					this.OnAppointmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Time")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.TimeSpan> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNewRequestFromParent", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> IsNewRequestFromParent
		{
			get
			{
				return this._IsNewRequestFromParent;
			}
			set
			{
				if ((this._IsNewRequestFromParent != value))
				{
					this.OnIsNewRequestFromParentChanging(value);
					this.SendPropertyChanging();
					this._IsNewRequestFromParent = value;
					this.SendPropertyChanged("IsNewRequestFromParent");
					this.OnIsNewRequestFromParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNewRequestFromProvider", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsNewRequestFromProvider
		{
			get
			{
				return this._IsNewRequestFromProvider;
			}
			set
			{
				if ((this._IsNewRequestFromProvider != value))
				{
					this.OnIsNewRequestFromProviderChanging(value);
					this.SendPropertyChanging();
					this._IsNewRequestFromProvider = value;
					this.SendPropertyChanged("IsNewRequestFromProvider");
					this.OnIsNewRequestFromProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientId_fk", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> PatientId_fk
		{
			get
			{
				return this._PatientId_fk;
			}
			set
			{
				if ((this._PatientId_fk != value))
				{
					if (this._Patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientId_fkChanging(value);
					this.SendPropertyChanging();
					this._PatientId_fk = value;
					this.SendPropertyChanged("PatientId_fk");
					this.OnPatientId_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderId_fk", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> ProviderId_fk
		{
			get
			{
				return this._ProviderId_fk;
			}
			set
			{
				if ((this._ProviderId_fk != value))
				{
					if (this._HealthCareProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviderId_fkChanging(value);
					this.SendPropertyChanging();
					this._ProviderId_fk = value;
					this.SendPropertyChanged("ProviderId_fk");
					this.OnProviderId_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyId_fk", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> FamilyId_fk
		{
			get
			{
				return this._FamilyId_fk;
			}
			set
			{
				if ((this._FamilyId_fk != value))
				{
					if (this._Family.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyId_fkChanging(value);
					this.SendPropertyChanging();
					this._FamilyId_fk = value;
					this.SendPropertyChanged("FamilyId_fk");
					this.OnFamilyId_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Appointment", Storage="_Patient", ThisKey="PatientId_fk", OtherKey="PatientId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Patient Patient
		{
			get
			{
				return this._Patient.Entity;
			}
			set
			{
				Patient previousValue = this._Patient.Entity;
				if (((previousValue != value) 
							|| (this._Patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patient.Entity = null;
						previousValue.Appointments.Remove(this);
					}
					this._Patient.Entity = value;
					if ((value != null))
					{
						value.Appointments.Add(this);
						this._PatientId_fk = value.PatientId;
					}
					else
					{
						this._PatientId_fk = default(Nullable<int>);
					}
					this.SendPropertyChanged("Patient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HealthCareProvider_Appointment", Storage="_HealthCareProvider", ThisKey="ProviderId_fk", OtherKey="HealthCareProviderId", IsForeignKey=true)]
		public HealthCareProvider HealthCareProvider
		{
			get
			{
				return this._HealthCareProvider.Entity;
			}
			set
			{
				HealthCareProvider previousValue = this._HealthCareProvider.Entity;
				if (((previousValue != value) 
							|| (this._HealthCareProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HealthCareProvider.Entity = null;
						previousValue.Appointments.Remove(this);
					}
					this._HealthCareProvider.Entity = value;
					if ((value != null))
					{
						value.Appointments.Add(this);
						this._ProviderId_fk = value.HealthCareProviderId;
					}
					else
					{
						this._ProviderId_fk = default(Nullable<int>);
					}
					this.SendPropertyChanged("HealthCareProvider");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Family_Appointment", Storage="_Family", ThisKey="FamilyId_fk", OtherKey="FamilyId", IsForeignKey=true)]
		public Family Family
		{
			get
			{
				return this._Family.Entity;
			}
			set
			{
				Family previousValue = this._Family.Entity;
				if (((previousValue != value) 
							|| (this._Family.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Family.Entity = null;
						previousValue.Appointments.Remove(this);
					}
					this._Family.Entity = value;
					if ((value != null))
					{
						value.Appointments.Add(this);
						this._FamilyId_fk = value.FamilyId;
					}
					else
					{
						this._FamilyId_fk = default(Nullable<int>);
					}
					this.SendPropertyChanged("Family");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Patient = default(EntityRef<Patient>);
			this._HealthCareProvider = default(EntityRef<HealthCareProvider>);
			this._Family = default(EntityRef<Family>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppointmentListPatient")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AppointmentListPatient
	{
		
		private int _AppointmentID_;
		
		private string _pFirstName;
		
		private string _Date_;
		
		private System.Nullable<System.TimeSpan> _Time_;
		
		private string _reason_;
		
		private string _PracticeName_;
		
		private string _Clinic_Name;
		
		private System.Nullable<int> _FamilyId;
		
		public AppointmentListPatient()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppointmentID_", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AppointmentID_
		{
			get
			{
				return this._AppointmentID_;
			}
			set
			{
				if ((this._AppointmentID_ != value))
				{
					this._AppointmentID_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pFirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string pFirstName
		{
			get
			{
				return this._pFirstName;
			}
			set
			{
				if ((this._pFirstName != value))
				{
					this._pFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_", DbType="VarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Date_
		{
			get
			{
				return this._Date_;
			}
			set
			{
				if ((this._Date_ != value))
				{
					this._Date_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_", DbType="Time")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.TimeSpan> Time_
		{
			get
			{
				return this._Time_;
			}
			set
			{
				if ((this._Time_ != value))
				{
					this._Time_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason_", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string reason_
		{
			get
			{
				return this._reason_;
			}
			set
			{
				if ((this._reason_ != value))
				{
					this._reason_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracticeName_", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string PracticeName_
		{
			get
			{
				return this._PracticeName_;
			}
			set
			{
				if ((this._PracticeName_ != value))
				{
					this._PracticeName_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clinic_Name", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Clinic_Name
		{
			get
			{
				return this._Clinic_Name;
			}
			set
			{
				if ((this._Clinic_Name != value))
				{
					this._Clinic_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> FamilyId
		{
			get
			{
				return this._FamilyId;
			}
			set
			{
				if ((this._FamilyId != value))
				{
					this._FamilyId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Qualification")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Qualification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QualificationId;
		
		private string _QualificationName;
		
		private EntitySet<Qualification_Provider> _Qualification_Providers;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQualificationIdChanging(int value);
    partial void OnQualificationIdChanged();
    partial void OnQualificationNameChanging(string value);
    partial void OnQualificationNameChanged();
    #endregion
		
		public Qualification()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int QualificationId
		{
			get
			{
				return this._QualificationId;
			}
			set
			{
				if ((this._QualificationId != value))
				{
					this.OnQualificationIdChanging(value);
					this.SendPropertyChanging();
					this._QualificationId = value;
					this.SendPropertyChanged("QualificationId");
					this.OnQualificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string QualificationName
		{
			get
			{
				return this._QualificationName;
			}
			set
			{
				if ((this._QualificationName != value))
				{
					this.OnQualificationNameChanging(value);
					this.SendPropertyChanging();
					this._QualificationName = value;
					this.SendPropertyChanged("QualificationName");
					this.OnQualificationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Qualification_Qualification_Provider", Storage="_Qualification_Providers", ThisKey="QualificationId", OtherKey="QualificationId_fk")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<Qualification_Provider> Qualification_Providers
		{
			get
			{
				if ((this.serializing 
							&& (this._Qualification_Providers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Qualification_Providers;
			}
			set
			{
				this._Qualification_Providers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Qualification_Providers(Qualification_Provider entity)
		{
			this.SendPropertyChanging();
			entity.Qualification = this;
		}
		
		private void detach_Qualification_Providers(Qualification_Provider entity)
		{
			this.SendPropertyChanging();
			entity.Qualification = null;
		}
		
		private void Initialize()
		{
			this._Qualification_Providers = new EntitySet<Qualification_Provider>(new Action<Qualification_Provider>(this.attach_Qualification_Providers), new Action<Qualification_Provider>(this.detach_Qualification_Providers));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Qualification_Provider")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Qualification_Provider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QualificationProviderId;
		
		private int _HealthCareProviderId_fk;
		
		private int _QualificationId_fk;
		
		private EntityRef<Qualification> _Qualification;
		
		private EntityRef<HealthCareProvider> _HealthCareProvider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQualificationProviderIdChanging(int value);
    partial void OnQualificationProviderIdChanged();
    partial void OnHealthCareProviderId_fkChanging(int value);
    partial void OnHealthCareProviderId_fkChanged();
    partial void OnQualificationId_fkChanging(int value);
    partial void OnQualificationId_fkChanged();
    #endregion
		
		public Qualification_Provider()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationProviderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int QualificationProviderId
		{
			get
			{
				return this._QualificationProviderId;
			}
			set
			{
				if ((this._QualificationProviderId != value))
				{
					this.OnQualificationProviderIdChanging(value);
					this.SendPropertyChanging();
					this._QualificationProviderId = value;
					this.SendPropertyChanged("QualificationProviderId");
					this.OnQualificationProviderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthCareProviderId_fk", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int HealthCareProviderId_fk
		{
			get
			{
				return this._HealthCareProviderId_fk;
			}
			set
			{
				if ((this._HealthCareProviderId_fk != value))
				{
					if (this._HealthCareProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHealthCareProviderId_fkChanging(value);
					this.SendPropertyChanging();
					this._HealthCareProviderId_fk = value;
					this.SendPropertyChanged("HealthCareProviderId_fk");
					this.OnHealthCareProviderId_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationId_fk", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int QualificationId_fk
		{
			get
			{
				return this._QualificationId_fk;
			}
			set
			{
				if ((this._QualificationId_fk != value))
				{
					if (this._Qualification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQualificationId_fkChanging(value);
					this.SendPropertyChanging();
					this._QualificationId_fk = value;
					this.SendPropertyChanged("QualificationId_fk");
					this.OnQualificationId_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Qualification_Qualification_Provider", Storage="_Qualification", ThisKey="QualificationId_fk", OtherKey="QualificationId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Qualification Qualification
		{
			get
			{
				return this._Qualification.Entity;
			}
			set
			{
				Qualification previousValue = this._Qualification.Entity;
				if (((previousValue != value) 
							|| (this._Qualification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Qualification.Entity = null;
						previousValue.Qualification_Providers.Remove(this);
					}
					this._Qualification.Entity = value;
					if ((value != null))
					{
						value.Qualification_Providers.Add(this);
						this._QualificationId_fk = value.QualificationId;
					}
					else
					{
						this._QualificationId_fk = default(int);
					}
					this.SendPropertyChanged("Qualification");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HealthCareProvider_Qualification_Provider", Storage="_HealthCareProvider", ThisKey="HealthCareProviderId_fk", OtherKey="HealthCareProviderId", IsForeignKey=true)]
		public HealthCareProvider HealthCareProvider
		{
			get
			{
				return this._HealthCareProvider.Entity;
			}
			set
			{
				HealthCareProvider previousValue = this._HealthCareProvider.Entity;
				if (((previousValue != value) 
							|| (this._HealthCareProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HealthCareProvider.Entity = null;
						previousValue.Qualification_Providers.Remove(this);
					}
					this._HealthCareProvider.Entity = value;
					if ((value != null))
					{
						value.Qualification_Providers.Add(this);
						this._HealthCareProviderId_fk = value.HealthCareProviderId;
					}
					else
					{
						this._HealthCareProviderId_fk = default(int);
					}
					this.SendPropertyChanged("HealthCareProvider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Qualification = default(EntityRef<Qualification>);
			this._HealthCareProvider = default(EntityRef<HealthCareProvider>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StateCodeResult
	{
		
		private string _StateCode;
		
		public StateCodeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this._StateCode = value;
				}
			}
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class sp_EthnicityResult
	{
		
		private string _EthnicityName;
		
		public sp_EthnicityResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EthnicityName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string EthnicityName
		{
			get
			{
				return this._EthnicityName;
			}
			set
			{
				if ((this._EthnicityName != value))
				{
					this._EthnicityName = value;
				}
			}
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class sp_s1Result
	{
		
		private int _StateId;
		
		public sp_s1Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class sp_s2Result
	{
		
		private int _StateId;
		
		public sp_s2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
