//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 12.0.21005.1
// 
namespace EYE.EYEServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/EYEServiceWebRole")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int UserIdField;
        
        private string FirstNameField;
        
        private string MiddleNameField;
        
        private string LastNameField;
        
        private string RoleField;
        
        private string PasswordField;
        
        private string EmailField;
        
        private string PhoneField;
        
        private System.Nullable<int> AddressId_fkField;
        
        private System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.HealthCareProvider> HealthCareProvidersField;
        
        private System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Family> FamiliesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.Nullable<int> AddressId_fk {
            get {
                return this.AddressId_fkField;
            }
            set {
                if ((this.AddressId_fkField.Equals(value) != true)) {
                    this.AddressId_fkField = value;
                    this.RaisePropertyChanged("AddressId_fk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.HealthCareProvider> HealthCareProviders {
            get {
                return this.HealthCareProvidersField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthCareProvidersField, value) != true)) {
                    this.HealthCareProvidersField = value;
                    this.RaisePropertyChanged("HealthCareProviders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Family> Families {
            get {
                return this.FamiliesField;
            }
            set {
                if ((object.ReferenceEquals(this.FamiliesField, value) != true)) {
                    this.FamiliesField = value;
                    this.RaisePropertyChanged("Families");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HealthCareProvider", Namespace="http://schemas.datacontract.org/2004/07/EYEServiceWebRole")]
    public partial class HealthCareProvider : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int HealthCareProviderIdField;
        
        private string PracticeNameField;
        
        private string RoleInPracticeField;
        
        private string GenderField;
        
        private string ClinicNameField;
        
        private System.Nullable<int> UserId_fkField;
        
        private System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Appointment> AppointmentsField;
        
        private System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Qualification_Provider> Qualification_ProvidersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HealthCareProviderId {
            get {
                return this.HealthCareProviderIdField;
            }
            set {
                if ((this.HealthCareProviderIdField.Equals(value) != true)) {
                    this.HealthCareProviderIdField = value;
                    this.RaisePropertyChanged("HealthCareProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PracticeName {
            get {
                return this.PracticeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PracticeNameField, value) != true)) {
                    this.PracticeNameField = value;
                    this.RaisePropertyChanged("PracticeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleInPractice {
            get {
                return this.RoleInPracticeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleInPracticeField, value) != true)) {
                    this.RoleInPracticeField = value;
                    this.RaisePropertyChanged("RoleInPractice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string ClinicName {
            get {
                return this.ClinicNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicNameField, value) != true)) {
                    this.ClinicNameField = value;
                    this.RaisePropertyChanged("ClinicName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<int> UserId_fk {
            get {
                return this.UserId_fkField;
            }
            set {
                if ((this.UserId_fkField.Equals(value) != true)) {
                    this.UserId_fkField = value;
                    this.RaisePropertyChanged("UserId_fk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Appointment> Appointments {
            get {
                return this.AppointmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentsField, value) != true)) {
                    this.AppointmentsField = value;
                    this.RaisePropertyChanged("Appointments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Qualification_Provider> Qualification_Providers {
            get {
                return this.Qualification_ProvidersField;
            }
            set {
                if ((object.ReferenceEquals(this.Qualification_ProvidersField, value) != true)) {
                    this.Qualification_ProvidersField = value;
                    this.RaisePropertyChanged("Qualification_Providers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Family", Namespace="http://schemas.datacontract.org/2004/07/EYEServiceWebRole")]
    public partial class Family : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int FamilyIdField;
        
        private string OtherContactField;
        
        private System.Nullable<int> UserId_fkField;
        
        private System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Family_Patient> Family_PatientsField;
        
        private System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Appointment> AppointmentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FamilyId {
            get {
                return this.FamilyIdField;
            }
            set {
                if ((this.FamilyIdField.Equals(value) != true)) {
                    this.FamilyIdField = value;
                    this.RaisePropertyChanged("FamilyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherContact {
            get {
                return this.OtherContactField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherContactField, value) != true)) {
                    this.OtherContactField = value;
                    this.RaisePropertyChanged("OtherContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId_fk {
            get {
                return this.UserId_fkField;
            }
            set {
                if ((this.UserId_fkField.Equals(value) != true)) {
                    this.UserId_fkField = value;
                    this.RaisePropertyChanged("UserId_fk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Family_Patient> Family_Patients {
            get {
                return this.Family_PatientsField;
            }
            set {
                if ((object.ReferenceEquals(this.Family_PatientsField, value) != true)) {
                    this.Family_PatientsField = value;
                    this.RaisePropertyChanged("Family_Patients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Appointment> Appointments {
            get {
                return this.AppointmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentsField, value) != true)) {
                    this.AppointmentsField = value;
                    this.RaisePropertyChanged("Appointments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Appointment", Namespace="http://schemas.datacontract.org/2004/07/EYEServiceWebRole")]
    public partial class Appointment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AppointmentIdField;
        
        private System.Nullable<System.TimeSpan> TimeField;
        
        private System.Nullable<System.DateTime> DateField;
        
        private string ReasonField;
        
        private System.Nullable<bool> IsNewRequestFromParentField;
        
        private System.Nullable<bool> IsNewRequestFromProviderField;
        
        private string CommentField;
        
        private string DurationField;
        
        private System.Nullable<int> PatientId_fkField;
        
        private System.Nullable<int> ProviderId_fkField;
        
        private System.Nullable<int> FamilyId_fkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppointmentId {
            get {
                return this.AppointmentIdField;
            }
            set {
                if ((this.AppointmentIdField.Equals(value) != true)) {
                    this.AppointmentIdField = value;
                    this.RaisePropertyChanged("AppointmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<bool> IsNewRequestFromParent {
            get {
                return this.IsNewRequestFromParentField;
            }
            set {
                if ((this.IsNewRequestFromParentField.Equals(value) != true)) {
                    this.IsNewRequestFromParentField = value;
                    this.RaisePropertyChanged("IsNewRequestFromParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<bool> IsNewRequestFromProvider {
            get {
                return this.IsNewRequestFromProviderField;
            }
            set {
                if ((this.IsNewRequestFromProviderField.Equals(value) != true)) {
                    this.IsNewRequestFromProviderField = value;
                    this.RaisePropertyChanged("IsNewRequestFromProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.Nullable<int> PatientId_fk {
            get {
                return this.PatientId_fkField;
            }
            set {
                if ((this.PatientId_fkField.Equals(value) != true)) {
                    this.PatientId_fkField = value;
                    this.RaisePropertyChanged("PatientId_fk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public System.Nullable<int> ProviderId_fk {
            get {
                return this.ProviderId_fkField;
            }
            set {
                if ((this.ProviderId_fkField.Equals(value) != true)) {
                    this.ProviderId_fkField = value;
                    this.RaisePropertyChanged("ProviderId_fk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Nullable<int> FamilyId_fk {
            get {
                return this.FamilyId_fkField;
            }
            set {
                if ((this.FamilyId_fkField.Equals(value) != true)) {
                    this.FamilyId_fkField = value;
                    this.RaisePropertyChanged("FamilyId_fk");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Qualification_Provider", Namespace="http://schemas.datacontract.org/2004/07/EYEServiceWebRole")]
    public partial class Qualification_Provider : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int QualificationProviderIdField;
        
        private int HealthCareProviderId_fkField;
        
        private int QualificationId_fkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QualificationProviderId {
            get {
                return this.QualificationProviderIdField;
            }
            set {
                if ((this.QualificationProviderIdField.Equals(value) != true)) {
                    this.QualificationProviderIdField = value;
                    this.RaisePropertyChanged("QualificationProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int HealthCareProviderId_fk {
            get {
                return this.HealthCareProviderId_fkField;
            }
            set {
                if ((this.HealthCareProviderId_fkField.Equals(value) != true)) {
                    this.HealthCareProviderId_fkField = value;
                    this.RaisePropertyChanged("HealthCareProviderId_fk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int QualificationId_fk {
            get {
                return this.QualificationId_fkField;
            }
            set {
                if ((this.QualificationId_fkField.Equals(value) != true)) {
                    this.QualificationId_fkField = value;
                    this.RaisePropertyChanged("QualificationId_fk");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Family_Patient", Namespace="http://schemas.datacontract.org/2004/07/EYEServiceWebRole")]
    public partial class Family_Patient : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int FamilyId_fkField;
        
        private int PatientId_fkField;
        
        private int FamilyPatientIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FamilyId_fk {
            get {
                return this.FamilyId_fkField;
            }
            set {
                if ((this.FamilyId_fkField.Equals(value) != true)) {
                    this.FamilyId_fkField = value;
                    this.RaisePropertyChanged("FamilyId_fk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId_fk {
            get {
                return this.PatientId_fkField;
            }
            set {
                if ((this.PatientId_fkField.Equals(value) != true)) {
                    this.PatientId_fkField = value;
                    this.RaisePropertyChanged("PatientId_fk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int FamilyPatientId {
            get {
                return this.FamilyPatientIdField;
            }
            set {
                if ((this.FamilyPatientIdField.Equals(value) != true)) {
                    this.FamilyPatientIdField = value;
                    this.RaisePropertyChanged("FamilyPatientId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/EYEServiceWebRole")]
    public partial class Address : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AddressIdField;
        
        private string AddressLine1Field;
        
        private string AddressLine2Field;
        
        private int State_fkField;
        
        private int ZipCodeField;
        
        private string CityField;
        
        private System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.User> UsersField;
        
        private System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.School> SchoolsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressId {
            get {
                return this.AddressIdField;
            }
            set {
                if ((this.AddressIdField.Equals(value) != true)) {
                    this.AddressIdField = value;
                    this.RaisePropertyChanged("AddressId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine1 {
            get {
                return this.AddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine1Field, value) != true)) {
                    this.AddressLine1Field = value;
                    this.RaisePropertyChanged("AddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine2 {
            get {
                return this.AddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine2Field, value) != true)) {
                    this.AddressLine2Field = value;
                    this.RaisePropertyChanged("AddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State_fk {
            get {
                return this.State_fkField;
            }
            set {
                if ((this.State_fkField.Equals(value) != true)) {
                    this.State_fkField = value;
                    this.RaisePropertyChanged("State_fk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((this.ZipCodeField.Equals(value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.User> Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.School> Schools {
            get {
                return this.SchoolsField;
            }
            set {
                if ((object.ReferenceEquals(this.SchoolsField, value) != true)) {
                    this.SchoolsField = value;
                    this.RaisePropertyChanged("Schools");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="School", Namespace="http://schemas.datacontract.org/2004/07/EYEServiceWebRole")]
    public partial class School : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int SchoolIdField;
        
        private string SchoolNameField;
        
        private string ContactField;
        
        private System.Nullable<int> AddressId_fkField;
        
        private System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Patient> PatientsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SchoolId {
            get {
                return this.SchoolIdField;
            }
            set {
                if ((this.SchoolIdField.Equals(value) != true)) {
                    this.SchoolIdField = value;
                    this.RaisePropertyChanged("SchoolId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchoolName {
            get {
                return this.SchoolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SchoolNameField, value) != true)) {
                    this.SchoolNameField = value;
                    this.RaisePropertyChanged("SchoolName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> AddressId_fk {
            get {
                return this.AddressId_fkField;
            }
            set {
                if ((this.AddressId_fkField.Equals(value) != true)) {
                    this.AddressId_fkField = value;
                    this.RaisePropertyChanged("AddressId_fk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Patient> Patients {
            get {
                return this.PatientsField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientsField, value) != true)) {
                    this.PatientsField = value;
                    this.RaisePropertyChanged("Patients");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/EYEServiceWebRole")]
    public partial class Patient : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PatientIdField;
        
        private string FirstNameField;
        
        private string MiddleNameField;
        
        private string LastNameField;
        
        private string GenderField;
        
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        private System.Nullable<int> EthnicityId_fkField;
        
        private System.Nullable<int> SchoolId_fkField;
        
        private System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Family_Patient> Family_PatientsField;
        
        private System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Appointment> AppointmentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<int> EthnicityId_fk {
            get {
                return this.EthnicityId_fkField;
            }
            set {
                if ((this.EthnicityId_fkField.Equals(value) != true)) {
                    this.EthnicityId_fkField = value;
                    this.RaisePropertyChanged("EthnicityId_fk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Nullable<int> SchoolId_fk {
            get {
                return this.SchoolId_fkField;
            }
            set {
                if ((this.SchoolId_fkField.Equals(value) != true)) {
                    this.SchoolId_fkField = value;
                    this.RaisePropertyChanged("SchoolId_fk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Family_Patient> Family_Patients {
            get {
                return this.Family_PatientsField;
            }
            set {
                if ((object.ReferenceEquals(this.Family_PatientsField, value) != true)) {
                    this.Family_PatientsField = value;
                    this.RaisePropertyChanged("Family_Patients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Appointment> Appointments {
            get {
                return this.AppointmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentsField, value) != true)) {
                    this.AppointmentsField = value;
                    this.RaisePropertyChanged("Appointments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="State", Namespace="http://schemas.datacontract.org/2004/07/EYEServiceWebRole")]
    public partial class State : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int StateIdField;
        
        private string StateCodeField;
        
        private string StateNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Address> AddressesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateId {
            get {
                return this.StateIdField;
            }
            set {
                if ((this.StateIdField.Equals(value) != true)) {
                    this.StateIdField = value;
                    this.RaisePropertyChanged("StateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Address> Addresses {
            get {
                return this.AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesField, value) != true)) {
                    this.AddressesField = value;
                    this.RaisePropertyChanged("Addresses");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ethnicity", Namespace="http://schemas.datacontract.org/2004/07/EYEServiceWebRole")]
    public partial class Ethnicity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int EthnicityIdField;
        
        private string EthnicityNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Patient> PatientsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EthnicityId {
            get {
                return this.EthnicityIdField;
            }
            set {
                if ((this.EthnicityIdField.Equals(value) != true)) {
                    this.EthnicityIdField = value;
                    this.RaisePropertyChanged("EthnicityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EthnicityName {
            get {
                return this.EthnicityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EthnicityNameField, value) != true)) {
                    this.EthnicityNameField = value;
                    this.RaisePropertyChanged("EthnicityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Patient> Patients {
            get {
                return this.PatientsField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientsField, value) != true)) {
                    this.PatientsField = value;
                    this.RaisePropertyChanged("Patients");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParentDetail", Namespace="http://schemas.datacontract.org/2004/07/EYEServiceWebRole")]
    public partial class ParentDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int FamilyIdField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private string PhoneField;
        
        private string OtherContactField;
        
        private string AddressLine1Field;
        
        private string AddressLine2Field;
        
        private string CityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FamilyId {
            get {
                return this.FamilyIdField;
            }
            set {
                if ((this.FamilyIdField.Equals(value) != true)) {
                    this.FamilyIdField = value;
                    this.RaisePropertyChanged("FamilyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string OtherContact {
            get {
                return this.OtherContactField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherContactField, value) != true)) {
                    this.OtherContactField = value;
                    this.RaisePropertyChanged("OtherContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string AddressLine1 {
            get {
                return this.AddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine1Field, value) != true)) {
                    this.AddressLine1Field = value;
                    this.RaisePropertyChanged("AddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string AddressLine2 {
            get {
                return this.AddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine2Field, value) != true)) {
                    this.AddressLine2Field = value;
                    this.RaisePropertyChanged("AddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HealthCareProviderList", Namespace="http://schemas.datacontract.org/2004/07/EYEServiceWebRole")]
    public partial class HealthCareProviderList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string First_NameField;
        
        private string Last_NameField;
        
        private string Clinic_NameField;
        
        private string Role_InPracticeField;
        
        private string Phone_Field;
        
        private string Address_LineField;
        
        private string City_Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string First_Name {
            get {
                return this.First_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.First_NameField, value) != true)) {
                    this.First_NameField = value;
                    this.RaisePropertyChanged("First_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Last_Name {
            get {
                return this.Last_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Last_NameField, value) != true)) {
                    this.Last_NameField = value;
                    this.RaisePropertyChanged("Last_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Clinic_Name {
            get {
                return this.Clinic_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Clinic_NameField, value) != true)) {
                    this.Clinic_NameField = value;
                    this.RaisePropertyChanged("Clinic_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Role_InPractice {
            get {
                return this.Role_InPracticeField;
            }
            set {
                if ((object.ReferenceEquals(this.Role_InPracticeField, value) != true)) {
                    this.Role_InPracticeField = value;
                    this.RaisePropertyChanged("Role_InPractice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Phone_ {
            get {
                return this.Phone_Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone_Field, value) != true)) {
                    this.Phone_Field = value;
                    this.RaisePropertyChanged("Phone_");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Address_Line {
            get {
                return this.Address_LineField;
            }
            set {
                if ((object.ReferenceEquals(this.Address_LineField, value) != true)) {
                    this.Address_LineField = value;
                    this.RaisePropertyChanged("Address_Line");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string City_ {
            get {
                return this.City_Field;
            }
            set {
                if ((object.ReferenceEquals(this.City_Field, value) != true)) {
                    this.City_Field = value;
                    this.RaisePropertyChanged("City_");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentListPatient", Namespace="http://schemas.datacontract.org/2004/07/EYEServiceWebRole")]
    public partial class AppointmentListPatient : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AppointmentID_Field;
        
        private string pFirstNameField;
        
        private string Date_Field;
        
        private System.Nullable<System.TimeSpan> Time_Field;
        
        private string reason_Field;
        
        private string PracticeName_Field;
        
        private string Clinic_NameField;
        
        private System.Nullable<int> FamilyIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppointmentID_ {
            get {
                return this.AppointmentID_Field;
            }
            set {
                if ((this.AppointmentID_Field.Equals(value) != true)) {
                    this.AppointmentID_Field = value;
                    this.RaisePropertyChanged("AppointmentID_");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pFirstName {
            get {
                return this.pFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.pFirstNameField, value) != true)) {
                    this.pFirstNameField = value;
                    this.RaisePropertyChanged("pFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Date_ {
            get {
                return this.Date_Field;
            }
            set {
                if ((object.ReferenceEquals(this.Date_Field, value) != true)) {
                    this.Date_Field = value;
                    this.RaisePropertyChanged("Date_");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<System.TimeSpan> Time_ {
            get {
                return this.Time_Field;
            }
            set {
                if ((this.Time_Field.Equals(value) != true)) {
                    this.Time_Field = value;
                    this.RaisePropertyChanged("Time_");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string reason_ {
            get {
                return this.reason_Field;
            }
            set {
                if ((object.ReferenceEquals(this.reason_Field, value) != true)) {
                    this.reason_Field = value;
                    this.RaisePropertyChanged("reason_");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string PracticeName_ {
            get {
                return this.PracticeName_Field;
            }
            set {
                if ((object.ReferenceEquals(this.PracticeName_Field, value) != true)) {
                    this.PracticeName_Field = value;
                    this.RaisePropertyChanged("PracticeName_");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Clinic_Name {
            get {
                return this.Clinic_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Clinic_NameField, value) != true)) {
                    this.Clinic_NameField = value;
                    this.RaisePropertyChanged("Clinic_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Nullable<int> FamilyId {
            get {
                return this.FamilyIdField;
            }
            set {
                if ((this.FamilyIdField.Equals(value) != true)) {
                    this.FamilyIdField = value;
                    this.RaisePropertyChanged("FamilyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EYEServiceReference.IEYEService")]
    public interface IEYEService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/validateUserLogin", ReplyAction="http://tempuri.org/IEYEService/validateUserLoginResponse")]
        System.Threading.Tasks.Task<bool> validateUserLoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getUserRole", ReplyAction="http://tempuri.org/IEYEService/getUserRoleResponse")]
        System.Threading.Tasks.Task<string> getUserRoleAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getUserId", ReplyAction="http://tempuri.org/IEYEService/getUserIdResponse")]
        System.Threading.Tasks.Task<int> getUserIdAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/validateUserEmail", ReplyAction="http://tempuri.org/IEYEService/validateUserEmailResponse")]
        System.Threading.Tasks.Task<bool> validateUserEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/addNewUser", ReplyAction="http://tempuri.org/IEYEService/addNewUserResponse")]
        System.Threading.Tasks.Task<bool> addNewUserAsync(EYE.EYEServiceReference.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/deleteUser", ReplyAction="http://tempuri.org/IEYEService/deleteUserResponse")]
        System.Threading.Tasks.Task<bool> deleteUserAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/modifyUser", ReplyAction="http://tempuri.org/IEYEService/modifyUserResponse")]
        System.Threading.Tasks.Task<bool> modifyUserAsync(EYE.EYEServiceReference.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getUsers", ReplyAction="http://tempuri.org/IEYEService/getUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.User>> getUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/addNewAddress", ReplyAction="http://tempuri.org/IEYEService/addNewAddressResponse")]
        System.Threading.Tasks.Task<bool> addNewAddressAsync(EYE.EYEServiceReference.Address newAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/deleteAddress", ReplyAction="http://tempuri.org/IEYEService/deleteAddressResponse")]
        System.Threading.Tasks.Task<bool> deleteAddressAsync(int addressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/modifyAddress", ReplyAction="http://tempuri.org/IEYEService/modifyAddressResponse")]
        System.Threading.Tasks.Task<bool> modifyAddressAsync(EYE.EYEServiceReference.Address newAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getAddresses", ReplyAction="http://tempuri.org/IEYEService/getAddressesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Address>> getAddressesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getAddressId", ReplyAction="http://tempuri.org/IEYEService/getAddressIdResponse")]
        System.Threading.Tasks.Task<int> getAddressIdAsync(string addressLine1, string addressLine2, string city, string state, int zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/addNewState", ReplyAction="http://tempuri.org/IEYEService/addNewStateResponse")]
        System.Threading.Tasks.Task<bool> addNewStateAsync(EYE.EYEServiceReference.State newState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/deleteState", ReplyAction="http://tempuri.org/IEYEService/deleteStateResponse")]
        System.Threading.Tasks.Task<bool> deleteStateAsync(int stateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/modifyState", ReplyAction="http://tempuri.org/IEYEService/modifyStateResponse")]
        System.Threading.Tasks.Task<bool> modifyStateAsync(EYE.EYEServiceReference.State newState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getStates", ReplyAction="http://tempuri.org/IEYEService/getStatesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.State>> getStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/addNewHealthCareProvider", ReplyAction="http://tempuri.org/IEYEService/addNewHealthCareProviderResponse")]
        System.Threading.Tasks.Task<bool> addNewHealthCareProviderAsync(EYE.EYEServiceReference.HealthCareProvider newHealthCareProvider);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/deleteHealthCareProvider", ReplyAction="http://tempuri.org/IEYEService/deleteHealthCareProviderResponse")]
        System.Threading.Tasks.Task<bool> deleteHealthCareProviderAsync(int healthCareProviderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/modifyHealthCareProvider", ReplyAction="http://tempuri.org/IEYEService/modifyHealthCareProviderResponse")]
        System.Threading.Tasks.Task<bool> modifyHealthCareProviderAsync(EYE.EYEServiceReference.HealthCareProvider newHealthCareProvider);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getHealthCareProviders", ReplyAction="http://tempuri.org/IEYEService/getHealthCareProvidersResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.HealthCareProvider>> getHealthCareProvidersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/addNewFamily", ReplyAction="http://tempuri.org/IEYEService/addNewFamilyResponse")]
        System.Threading.Tasks.Task<bool> addNewFamilyAsync(EYE.EYEServiceReference.Family newFamily);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/deleteFamily", ReplyAction="http://tempuri.org/IEYEService/deleteFamilyResponse")]
        System.Threading.Tasks.Task<bool> deleteFamilyAsync(int familyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/modifyFamily", ReplyAction="http://tempuri.org/IEYEService/modifyFamilyResponse")]
        System.Threading.Tasks.Task<bool> modifyFamilyAsync(EYE.EYEServiceReference.Family newFamily);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getFamilies", ReplyAction="http://tempuri.org/IEYEService/getFamiliesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Family>> getFamiliesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/addNewPatient", ReplyAction="http://tempuri.org/IEYEService/addNewPatientResponse")]
        System.Threading.Tasks.Task<bool> addNewPatientAsync(EYE.EYEServiceReference.Patient newPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/deletePatient", ReplyAction="http://tempuri.org/IEYEService/deletePatientResponse")]
        System.Threading.Tasks.Task<bool> deletePatientAsync(int patientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/modifyPatient", ReplyAction="http://tempuri.org/IEYEService/modifyPatientResponse")]
        System.Threading.Tasks.Task<bool> modifyPatientAsync(EYE.EYEServiceReference.Patient newPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/addNewFamily_Patient", ReplyAction="http://tempuri.org/IEYEService/addNewFamily_PatientResponse")]
        System.Threading.Tasks.Task<bool> addNewFamily_PatientAsync(EYE.EYEServiceReference.Family_Patient newFamilyPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/deleteFamily_Patient", ReplyAction="http://tempuri.org/IEYEService/deleteFamily_PatientResponse")]
        System.Threading.Tasks.Task<bool> deleteFamily_PatientAsync(int familyPatientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/modifyFamily_Patient", ReplyAction="http://tempuri.org/IEYEService/modifyFamily_PatientResponse")]
        System.Threading.Tasks.Task<bool> modifyFamily_PatientAsync(EYE.EYEServiceReference.Family_Patient newPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getFamily_Patients", ReplyAction="http://tempuri.org/IEYEService/getFamily_PatientsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Family_Patient>> getFamily_PatientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/addNewSchool", ReplyAction="http://tempuri.org/IEYEService/addNewSchoolResponse")]
        System.Threading.Tasks.Task<bool> addNewSchoolAsync(EYE.EYEServiceReference.School newSchool);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/deleteSchool", ReplyAction="http://tempuri.org/IEYEService/deleteSchoolResponse")]
        System.Threading.Tasks.Task<bool> deleteSchoolAsync(int schoolID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/modifySchool", ReplyAction="http://tempuri.org/IEYEService/modifySchoolResponse")]
        System.Threading.Tasks.Task<bool> modifySchoolAsync(EYE.EYEServiceReference.School newSchool);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getSchools", ReplyAction="http://tempuri.org/IEYEService/getSchoolsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.School>> getSchoolsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/addNewEthnicity", ReplyAction="http://tempuri.org/IEYEService/addNewEthnicityResponse")]
        System.Threading.Tasks.Task<bool> addNewEthnicityAsync(EYE.EYEServiceReference.Ethnicity newEthnicity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/deleteEthnicity", ReplyAction="http://tempuri.org/IEYEService/deleteEthnicityResponse")]
        System.Threading.Tasks.Task<bool> deleteEthnicityAsync(int ethnicityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/modifyEthnicity", ReplyAction="http://tempuri.org/IEYEService/modifyEthnicityResponse")]
        System.Threading.Tasks.Task<bool> modifyEthnicityAsync(EYE.EYEServiceReference.Ethnicity newEthnicity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getEthnicities", ReplyAction="http://tempuri.org/IEYEService/getEthnicitiesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Ethnicity>> getEthnicitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getEthnicityNames", ReplyAction="http://tempuri.org/IEYEService/getEthnicityNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> getEthnicityNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getPatientId", ReplyAction="http://tempuri.org/IEYEService/getPatientIdResponse")]
        System.Threading.Tasks.Task<int> getPatientIdAsync(string firstName, string middleName, string lastName, System.DateTime dateOfBirth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/isSchoolExisted", ReplyAction="http://tempuri.org/IEYEService/isSchoolExistedResponse")]
        System.Threading.Tasks.Task<bool> isSchoolExistedAsync(string schoolName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getHealthCareProviderId", ReplyAction="http://tempuri.org/IEYEService/getHealthCareProviderIdResponse")]
        System.Threading.Tasks.Task<int> getHealthCareProviderIdAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getFamily_PatientId", ReplyAction="http://tempuri.org/IEYEService/getFamily_PatientIdResponse")]
        System.Threading.Tasks.Task<int> getFamily_PatientIdAsync(int familyID, int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getEthnicityId", ReplyAction="http://tempuri.org/IEYEService/getEthnicityIdResponse")]
        System.Threading.Tasks.Task<int> getEthnicityIdAsync(string ethnicityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/abbcd", ReplyAction="http://tempuri.org/IEYEService/abbcdResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> abbcdAsync(string statecode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getUserdetails", ReplyAction="http://tempuri.org/IEYEService/getUserdetailsResponse")]
        System.Threading.Tasks.Task<EYE.EYEServiceReference.User> getUserdetailsAsync(int loginId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getPatientList", ReplyAction="http://tempuri.org/IEYEService/getPatientListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Patient>> getPatientListAsync(int familyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getFamilyDetails", ReplyAction="http://tempuri.org/IEYEService/getFamilyDetailsResponse")]
        System.Threading.Tasks.Task<EYE.EYEServiceReference.ParentDetail> getFamilyDetailsAsync(int familyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/createAppointment", ReplyAction="http://tempuri.org/IEYEService/createAppointmentResponse")]
        System.Threading.Tasks.Task<bool> createAppointmentAsync(EYE.EYEServiceReference.Appointment newAppointment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getProviderSearchListDetails", ReplyAction="http://tempuri.org/IEYEService/getProviderSearchListDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.HealthCareProviderList>> getProviderSearchListDetailsAsync(string firstName, string lastName, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/addPatient", ReplyAction="http://tempuri.org/IEYEService/addPatientResponse")]
        System.Threading.Tasks.Task<int> addPatientAsync(EYE.EYEServiceReference.Patient newPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/addAddress", ReplyAction="http://tempuri.org/IEYEService/addAddressResponse")]
        System.Threading.Tasks.Task<int> addAddressAsync(EYE.EYEServiceReference.Address newAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getStateId", ReplyAction="http://tempuri.org/IEYEService/getStateIdResponse")]
        System.Threading.Tasks.Task<int> getStateIdAsync(string stateCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getStateCode", ReplyAction="http://tempuri.org/IEYEService/getStateCodeResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> getStateCodeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getSchoolId", ReplyAction="http://tempuri.org/IEYEService/getSchoolIdResponse")]
        System.Threading.Tasks.Task<int> getSchoolIdAsync(string schoolName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getPatients", ReplyAction="http://tempuri.org/IEYEService/getPatientsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Patient>> getPatientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/healthCareProviderId", ReplyAction="http://tempuri.org/IEYEService/healthCareProviderIdResponse")]
        System.Threading.Tasks.Task<int> healthCareProviderIdAsync(string practiceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/patientId", ReplyAction="http://tempuri.org/IEYEService/patientIdResponse")]
        System.Threading.Tasks.Task<int> patientIdAsync(string fullName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/patientFullName", ReplyAction="http://tempuri.org/IEYEService/patientFullNameResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> patientFullNameAsync(int familyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/appointments", ReplyAction="http://tempuri.org/IEYEService/appointmentsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.AppointmentListPatient>> appointmentsAsync(int familyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/getFamilyId", ReplyAction="http://tempuri.org/IEYEService/getFamilyIdResponse")]
        System.Threading.Tasks.Task<int> getFamilyIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/updateAppointment", ReplyAction="http://tempuri.org/IEYEService/updateAppointmentResponse")]
        System.Threading.Tasks.Task updateAppointmentAsync(System.DateTime date, System.TimeSpan time, int id, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEYEService/deleteAppointment", ReplyAction="http://tempuri.org/IEYEService/deleteAppointmentResponse")]
        System.Threading.Tasks.Task<bool> deleteAppointmentAsync(int appointmentID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEYEServiceChannel : EYE.EYEServiceReference.IEYEService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EYEServiceClient : System.ServiceModel.ClientBase<EYE.EYEServiceReference.IEYEService>, EYE.EYEServiceReference.IEYEService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public EYEServiceClient() : 
                base(EYEServiceClient.GetDefaultBinding(), EYEServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IEYEService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EYEServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(EYEServiceClient.GetBindingForEndpoint(endpointConfiguration), EYEServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EYEServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(EYEServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EYEServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(EYEServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EYEServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<bool> validateUserLoginAsync(string email, string password) {
            return base.Channel.validateUserLoginAsync(email, password);
        }
        
        public System.Threading.Tasks.Task<string> getUserRoleAsync(string email) {
            return base.Channel.getUserRoleAsync(email);
        }
        
        public System.Threading.Tasks.Task<int> getUserIdAsync(string email) {
            return base.Channel.getUserIdAsync(email);
        }
        
        public System.Threading.Tasks.Task<bool> validateUserEmailAsync(string email) {
            return base.Channel.validateUserEmailAsync(email);
        }
        
        public System.Threading.Tasks.Task<bool> addNewUserAsync(EYE.EYEServiceReference.User newUser) {
            return base.Channel.addNewUserAsync(newUser);
        }
        
        public System.Threading.Tasks.Task<bool> deleteUserAsync(int userID) {
            return base.Channel.deleteUserAsync(userID);
        }
        
        public System.Threading.Tasks.Task<bool> modifyUserAsync(EYE.EYEServiceReference.User newUser) {
            return base.Channel.modifyUserAsync(newUser);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.User>> getUsersAsync() {
            return base.Channel.getUsersAsync();
        }
        
        public System.Threading.Tasks.Task<bool> addNewAddressAsync(EYE.EYEServiceReference.Address newAddress) {
            return base.Channel.addNewAddressAsync(newAddress);
        }
        
        public System.Threading.Tasks.Task<bool> deleteAddressAsync(int addressID) {
            return base.Channel.deleteAddressAsync(addressID);
        }
        
        public System.Threading.Tasks.Task<bool> modifyAddressAsync(EYE.EYEServiceReference.Address newAddress) {
            return base.Channel.modifyAddressAsync(newAddress);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Address>> getAddressesAsync() {
            return base.Channel.getAddressesAsync();
        }
        
        public System.Threading.Tasks.Task<int> getAddressIdAsync(string addressLine1, string addressLine2, string city, string state, int zipCode) {
            return base.Channel.getAddressIdAsync(addressLine1, addressLine2, city, state, zipCode);
        }
        
        public System.Threading.Tasks.Task<bool> addNewStateAsync(EYE.EYEServiceReference.State newState) {
            return base.Channel.addNewStateAsync(newState);
        }
        
        public System.Threading.Tasks.Task<bool> deleteStateAsync(int stateID) {
            return base.Channel.deleteStateAsync(stateID);
        }
        
        public System.Threading.Tasks.Task<bool> modifyStateAsync(EYE.EYEServiceReference.State newState) {
            return base.Channel.modifyStateAsync(newState);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.State>> getStatesAsync() {
            return base.Channel.getStatesAsync();
        }
        
        public System.Threading.Tasks.Task<bool> addNewHealthCareProviderAsync(EYE.EYEServiceReference.HealthCareProvider newHealthCareProvider) {
            return base.Channel.addNewHealthCareProviderAsync(newHealthCareProvider);
        }
        
        public System.Threading.Tasks.Task<bool> deleteHealthCareProviderAsync(int healthCareProviderID) {
            return base.Channel.deleteHealthCareProviderAsync(healthCareProviderID);
        }
        
        public System.Threading.Tasks.Task<bool> modifyHealthCareProviderAsync(EYE.EYEServiceReference.HealthCareProvider newHealthCareProvider) {
            return base.Channel.modifyHealthCareProviderAsync(newHealthCareProvider);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.HealthCareProvider>> getHealthCareProvidersAsync() {
            return base.Channel.getHealthCareProvidersAsync();
        }
        
        public System.Threading.Tasks.Task<bool> addNewFamilyAsync(EYE.EYEServiceReference.Family newFamily) {
            return base.Channel.addNewFamilyAsync(newFamily);
        }
        
        public System.Threading.Tasks.Task<bool> deleteFamilyAsync(int familyID) {
            return base.Channel.deleteFamilyAsync(familyID);
        }
        
        public System.Threading.Tasks.Task<bool> modifyFamilyAsync(EYE.EYEServiceReference.Family newFamily) {
            return base.Channel.modifyFamilyAsync(newFamily);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Family>> getFamiliesAsync() {
            return base.Channel.getFamiliesAsync();
        }
        
        public System.Threading.Tasks.Task<bool> addNewPatientAsync(EYE.EYEServiceReference.Patient newPatient) {
            return base.Channel.addNewPatientAsync(newPatient);
        }
        
        public System.Threading.Tasks.Task<bool> deletePatientAsync(int patientID) {
            return base.Channel.deletePatientAsync(patientID);
        }
        
        public System.Threading.Tasks.Task<bool> modifyPatientAsync(EYE.EYEServiceReference.Patient newPatient) {
            return base.Channel.modifyPatientAsync(newPatient);
        }
        
        public System.Threading.Tasks.Task<bool> addNewFamily_PatientAsync(EYE.EYEServiceReference.Family_Patient newFamilyPatient) {
            return base.Channel.addNewFamily_PatientAsync(newFamilyPatient);
        }
        
        public System.Threading.Tasks.Task<bool> deleteFamily_PatientAsync(int familyPatientID) {
            return base.Channel.deleteFamily_PatientAsync(familyPatientID);
        }
        
        public System.Threading.Tasks.Task<bool> modifyFamily_PatientAsync(EYE.EYEServiceReference.Family_Patient newPatient) {
            return base.Channel.modifyFamily_PatientAsync(newPatient);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Family_Patient>> getFamily_PatientsAsync() {
            return base.Channel.getFamily_PatientsAsync();
        }
        
        public System.Threading.Tasks.Task<bool> addNewSchoolAsync(EYE.EYEServiceReference.School newSchool) {
            return base.Channel.addNewSchoolAsync(newSchool);
        }
        
        public System.Threading.Tasks.Task<bool> deleteSchoolAsync(int schoolID) {
            return base.Channel.deleteSchoolAsync(schoolID);
        }
        
        public System.Threading.Tasks.Task<bool> modifySchoolAsync(EYE.EYEServiceReference.School newSchool) {
            return base.Channel.modifySchoolAsync(newSchool);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.School>> getSchoolsAsync() {
            return base.Channel.getSchoolsAsync();
        }
        
        public System.Threading.Tasks.Task<bool> addNewEthnicityAsync(EYE.EYEServiceReference.Ethnicity newEthnicity) {
            return base.Channel.addNewEthnicityAsync(newEthnicity);
        }
        
        public System.Threading.Tasks.Task<bool> deleteEthnicityAsync(int ethnicityID) {
            return base.Channel.deleteEthnicityAsync(ethnicityID);
        }
        
        public System.Threading.Tasks.Task<bool> modifyEthnicityAsync(EYE.EYEServiceReference.Ethnicity newEthnicity) {
            return base.Channel.modifyEthnicityAsync(newEthnicity);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Ethnicity>> getEthnicitiesAsync() {
            return base.Channel.getEthnicitiesAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> getEthnicityNamesAsync() {
            return base.Channel.getEthnicityNamesAsync();
        }
        
        public System.Threading.Tasks.Task<int> getPatientIdAsync(string firstName, string middleName, string lastName, System.DateTime dateOfBirth) {
            return base.Channel.getPatientIdAsync(firstName, middleName, lastName, dateOfBirth);
        }
        
        public System.Threading.Tasks.Task<bool> isSchoolExistedAsync(string schoolName) {
            return base.Channel.isSchoolExistedAsync(schoolName);
        }
        
        public System.Threading.Tasks.Task<int> getHealthCareProviderIdAsync(int userID) {
            return base.Channel.getHealthCareProviderIdAsync(userID);
        }
        
        public System.Threading.Tasks.Task<int> getFamily_PatientIdAsync(int familyID, int patientId) {
            return base.Channel.getFamily_PatientIdAsync(familyID, patientId);
        }
        
        public System.Threading.Tasks.Task<int> getEthnicityIdAsync(string ethnicityName) {
            return base.Channel.getEthnicityIdAsync(ethnicityName);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> abbcdAsync(string statecode) {
            return base.Channel.abbcdAsync(statecode);
        }
        
        public System.Threading.Tasks.Task<EYE.EYEServiceReference.User> getUserdetailsAsync(int loginId) {
            return base.Channel.getUserdetailsAsync(loginId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Patient>> getPatientListAsync(int familyId) {
            return base.Channel.getPatientListAsync(familyId);
        }
        
        public System.Threading.Tasks.Task<EYE.EYEServiceReference.ParentDetail> getFamilyDetailsAsync(int familyId) {
            return base.Channel.getFamilyDetailsAsync(familyId);
        }
        
        public System.Threading.Tasks.Task<bool> createAppointmentAsync(EYE.EYEServiceReference.Appointment newAppointment) {
            return base.Channel.createAppointmentAsync(newAppointment);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.HealthCareProviderList>> getProviderSearchListDetailsAsync(string firstName, string lastName, string location) {
            return base.Channel.getProviderSearchListDetailsAsync(firstName, lastName, location);
        }
        
        public System.Threading.Tasks.Task<int> addPatientAsync(EYE.EYEServiceReference.Patient newPatient) {
            return base.Channel.addPatientAsync(newPatient);
        }
        
        public System.Threading.Tasks.Task<int> addAddressAsync(EYE.EYEServiceReference.Address newAddress) {
            return base.Channel.addAddressAsync(newAddress);
        }
        
        public System.Threading.Tasks.Task<int> getStateIdAsync(string stateCode) {
            return base.Channel.getStateIdAsync(stateCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> getStateCodeAsync() {
            return base.Channel.getStateCodeAsync();
        }
        
        public System.Threading.Tasks.Task<int> getSchoolIdAsync(string schoolName) {
            return base.Channel.getSchoolIdAsync(schoolName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.Patient>> getPatientsAsync() {
            return base.Channel.getPatientsAsync();
        }
        
        public System.Threading.Tasks.Task<int> healthCareProviderIdAsync(string practiceName) {
            return base.Channel.healthCareProviderIdAsync(practiceName);
        }
        
        public System.Threading.Tasks.Task<int> patientIdAsync(string fullName) {
            return base.Channel.patientIdAsync(fullName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> patientFullNameAsync(int familyId) {
            return base.Channel.patientFullNameAsync(familyId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<EYE.EYEServiceReference.AppointmentListPatient>> appointmentsAsync(int familyId) {
            return base.Channel.appointmentsAsync(familyId);
        }
        
        public System.Threading.Tasks.Task<int> getFamilyIdAsync(int userId) {
            return base.Channel.getFamilyIdAsync(userId);
        }
        
        public System.Threading.Tasks.Task updateAppointmentAsync(System.DateTime date, System.TimeSpan time, int id, string reason) {
            return base.Channel.updateAppointmentAsync(date, time, id, reason);
        }
        
        public System.Threading.Tasks.Task<bool> deleteAppointmentAsync(int appointmentID) {
            return base.Channel.deleteAppointmentAsync(appointmentID);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IEYEService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IEYEService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:52635/EYEService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return EYEServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IEYEService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return EYEServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IEYEService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IEYEService,
        }
    }
}
